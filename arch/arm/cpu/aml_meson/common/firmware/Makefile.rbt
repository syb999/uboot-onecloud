
include $(TOPDIR)/config.mk
#$(warning $(PLATFORM_CPPFLAGS))

PLATFORM_CPPFLAGS+=-DCONFIG_AMLROM_SPL

LDFLAGS	= -Bstatic -T $(obj)reboot.lds  $(PLATFORM_LDFLAGS)
BURNLDFLAGS	= -Bstatic -T $(obj)burner.lds  $(PLATFORM_LDFLAGS) 
#AFLAGS	+= -DAML_DEBUG_ROM -DTEXT_BASE=$(TEXT_BASE)  -I$(OBJTREE)
#CFLAGS	+= -DAML_DEBUG_ROM -DTEXT_BASE=$(TEXT_BASE)  -I$(OBJTREE)
#CFLAGS :=  -g --cpu cortex-a9  -Ospace  --c99 -W  --thumb \
#				 $(filter -D%,$(CFLAGS)) $(filter -I%,$(CFLAGS))
#-Ospace 
#LDFLAGS = --cpu cortex-a9 --info totals --info unused --info inputs --scatter firmware.scat --entry _start --keep=rom_spl_arm.o\(.magic\)
#AFLAGS = -g --cpu cortex-a9  $(filter -I%,$(CFLAGS))
 
CFLAGS	:=$(CFLAGS:-marm=-mthumb)
#CFLAGS	:=$(CFLAGS:-mno-thumb-interwork=)
CFLAGS	:=$(CFLAGS:-fPIC=)
CFLAGS	:=$(CFLAGS:-ffixed-r8=)
CFLAGS	+=  -DCONFIG_AML_ROMBOOT_SPL  -MD -Wno-unused-function -mno-long-calls
AFLAGS	+= -DCONFIG_AMLROM_SPL -DTEXT_BASE=$(TEXT_BASE) -MD 
#CONFIG_AML_ROMBOOT_SPL
#CC=armcc --translate_gcc --gnu --c99 


SOBJS	 = reboot.o
COBJS	 = serial.o 
				
OBJS	:= $(addprefix $(obj),$(SOBJS))
__OBJS	:= $(SOBJS) $(COBJS)

BURNOBJS:= $(addprefix $(obj),$(SOBJS) $(COBJS) burn.o )
VPATH_LIST=	$(TOPDIR)/board/$(BOARDDIR) \
						$(SRCTREE)/$(CPUDIR)/$(SOC) \
						$(SRCTREE)/$(CPUDIR)/common	\
						$(SRCTREE)/$(CPUDIR)  			\
						$(SRCTREE)/common
VPATH_LIST:=$(VPATH_LIST:%=%/firmware)											
CFLAGS+=$(VPATH_LIST:%=-I%)					
vpath %.c $(VPATH_LIST)
vpath %.S $(VPATH_LIST)
vpath %.s $(VPATH_LIST)
origin_LDS=$(abspath reboot.lds)
target_LDS=$(abspath $(obj)reboot.lds)
ifeq ( $(origin_LDS),$(target_LDS))
	target_LDS=$(OBJTREE)/reboot.lds
endif

ALL	= $(FIRMWARE) $(dir $(FIRMWARE))aml-reboot.bin \
			 $(dir $(FIRMWARE))aml-reboot.out \

ELFFILES= $(dir $(FIRMWARE))aml-reboot.out \

all: $(ALL) $(ELFFILES)	 
	
%.bin:	%.out
	$(OBJCOPY) ${OBJCFLAGS} -O binary $< $@
$(dir $(FIRMWARE))aml-reboot.out:$(OBJS) $(obj)serial.o $(obj)reboot.lds
%.out:
	
	$(LD) $(LDFLAGS) $(filter %.o,$^) $(PLATFORM_LIBGCC)\
		-Map $(@:%=%.map) --cref \
		-o $@

#$(target_LDS): $(origin_LDS)
#	$(CPP) $(CPPFLAGS)   $(LDPPFLAGS) -std=c99 -D__ASSEMBLY__ -P - <$^ >$@
	
$(obj)reboot.lds: $(origin_LDS)
		$(CPP) $(CPPFLAGS)   $(LDPPFLAGS) -std=c99 -D__ASSEMBLY__ -P - <$^ >$@

sinclude $(wildcard $(obj)*.d)



#########################################################################
